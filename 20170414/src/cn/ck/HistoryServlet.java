package cn.ck;
/**1.获取当前时间显示到浏览器中
 * 2.创建Cookie来保存第一次访问时的时间
 * 名为lastTime
 * 3.将Cookie中保存的数据发送到浏览器来保存，因为cookie中保存的数据不能被服务器保存，而session可以被服务器保存
 *默认时间为30分钟 
 * @author Administrator
 * 4.以后再访问时，获取cookie的数据，显示时间到浏览器中。
 * 更新名字为LastTime的cookie,设置值为当前时间，保证接下来的访问拿到的是前一次的访问的时间
 * 5.吧更新后的cookie 发送给浏览器保存
 */
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.ServletException;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


public class HistoryServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
    public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
response.setContentType("text/html;charset=utf-8");
		
		//获取当前时间
		SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
		String curTime = format.format(new Date());
		
		
		//取得cookie
		Cookie[] cookies = request.getCookies();
		String lastTime = null;
		if(cookies!=null){
			for (Cookie cookie : cookies) {
				if(cookie.getName().equals("lastTime")){
					//有lastTime的cookie，已经是第n次访问
					lastTime = cookie.getValue();//上次访问的时间
					//第n次访问
					//1.把上次显示时间显示到浏览器
					response.getWriter().write("欢迎回来，你上次访问的时间为："+lastTime+",当前时间为："+curTime);
					//2.更新cookie
					cookie.setValue(curTime);
					cookie.setMaxAge(1*30*24*60*60);
					//3.把更新后的cookie发送到浏览器
					response.addCookie(cookie);
					break;
				}
			}
		}
		
		/**
		 * 第一次访问（没有cookie 或 有cookie，但没有名为lastTime的cookie）
		 */
		if(cookies==null || lastTime==null){
			//1.显示当前时间到浏览器
			response.getWriter().write("你是首次访问本网站，当前时间为："+curTime);
			//2.创建Cookie对象
			Cookie cookie = new Cookie("lastTime",curTime);
			cookie.setMaxAge(1*30*24*60*60);//保存一个月
			//3.把cookie发送到浏览器保存
			response.addCookie(cookie);
		}
	}

}
